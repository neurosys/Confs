#!/bin/sh

userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap

# merge in defaults and keymaps

if [ -f $sysresources ]
then
    xrdb -merge $sysresources
fi

if [ -f $sysmodmap ]
then
    xmodmap $sysmodmap
fi

if [ -f "$userresources" ]
then
    xrdb -merge "$userresources"
fi

if [ -f "$usermodmap" ]
then
    xmodmap "$usermodmap"
fi

# start some nice programs

if [ -d /etc/X11/xinit/xinitrc.d ]
then
    for f in /etc/X11/xinit/xinitrc.d/?*.sh ;
    do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi

# Set fail primary/secondary GPU
# > xrandr --listproviders
# > Providers: number : 2
# > Provider 0: id: 0x7b cap: 0xb, Source Output, Sink Output, Sink Offload crtcs: 2 outputs: 4 associated providers: 0 name:Intel
# > Provider 1: id: 0x55 cap: 0xf, Source Output, Sink Output, Source Offload, Sink Offload crtcs: 6 outputs: 0 associated providers: 0 name:TURKS @ pci:0000:01:00.0
#xrandr --setprovideroffloadsink 0x55 0x7b
# use 'glxinfo | grep "OpenGL"' to identify the graphics used currently
# Use DRI_PRIME=1 <cmd> to have the app started use the better card
#epxort DRI_PRIME=1

if [[ -d /etc/X11/xorg.conf.d/ ]]
then
    # (Home)
    grep -qRi "nvidia" /etc/X11
    if [[ $? -eq 0 ]]
    then
        # Load nvidia proprietary driver
        xrandr --setprovideroutputsource modesetting NVIDIA-0
        xrandr --output eDP-1-1 --auto --right-of HDMI-1-1 --output HDMI-1-1 --auto
        #xrandr --output eDP-1-1 --off --output HDMI-1-1 --auto
    else
        xrandr --output DP-1 --auto --left-of HDMI-1 --output HDMI-1 --auto --left-of eDP-1 --output eDP-1 --auto
    fi
else
    # (work)
    xrandr --output VGA-1 --auto --right-of HDMI-1 --output HDMI-1 --auto
fi

# Set wallpaper
which feh
if [[ $? -eq 0 ]]
then
    feh --bg-center ~/Pictures/wallhaven-280260.jpg
fi

# Make Caps-Lock a new Ctrl
setxkbmap -layout us -option ctrl:nocaps

# Disable error bell
xset -b

# Don't turn of the monitor
xset -dpms
xset s off

# Prepare support for transparency
xcompmgr &
transset 0.2

# Enable volume keys
which xbindkeys
if [[ $? -eq 0 ]]
then
    xbindkeys
fi

# Testing: enable gnome-keyring at X11 startup
dbus-update-activation-environment --systemd DISPLAY
eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
export SSH_AUTH_SOCK

function gnome3() {
    export XDG_SESSION_TYPE=x11
    export GDK_BACKEND=x11
    exec gnome-session
}

function gnomeClassic() {
    export XDG_CURRENT_DESKTOP=GNOME-Classic:GNOME
    export GNOME_SHELL_SESSION_MODE=classic
    exec gnome-session --session=gnome-classic
}


#dwm
i3 
#gnome3
#gnomeClassic


# Path to your oh-my-zsh installation.

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"
#setopt APPEND_HISTORY

function sourceIfExists()
{
    local file=$1
    if [[ -f $file ]]
    then
        . $file
    fi
}


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"


path_to_conf_folder=$( readlink -f ~/.zshrc )
modules_folder=$(dirname $path_to_conf_folder)


sourceIfExists ${modules_folder}/envtests
sourceIfExists ${modules_folder}/defines
sourceIfExists ${modules_folder}/exports
sourceIfExists ${modules_folder}/aliases
sourceIfExists ${modules_folder}/ls_colors
sourceIfExists ~/.local_aliases

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=${modules_folder}/zsh/

# List of plugins
# zsh-syntax-highlighting - Provides command line highlighting for cmd name, globing and others
# colored-man-pages       - Adds colors to man pages
# rand-quote              - Downloads a quote when launching % quote
# colorize                - Tries to highlighting file content based on extension or content
#                           requires pygmentize (run as cat)
# cp                      - Use rsync to copy files and get progress bar (run as cpv)
# sudo                    - Presc Esc-Esc to run the last command with sudo as prefix
# vim-interaction         - Open a file in an already running gvim session (run as callvim or simply v)
# calc                    - Allows simple calculator on command line (run as = <operations>) requires bc
# bgnotify                - When you don't have the terminal focused, it notifies you about processes that finished (task X finished 1m 22s)
# common-aliases          - Useful set of aliases (needs to soak)
#
# extract                 - extract various archives

if [[ $is_cygwin -eq 1 ]]
then
    plugins=(zsh-syntax-highlighting colored-man-pages colorize git git-extras taskwarrior)
    ZSH_THEME="myjtriley"
    #ZSH_THEME="candy"
else
    ZSH_THEME="myjtrileygit"
    #ZSH_THEME="candy"
   #ZSH_THEME="random"
    plugins=(zsh-syntax-highlighting colored-man-pages colorize sudo bgnotify git git-extras tig systemd fzf golang docker docker-compose kubectl helm taskwarrior extract)
fi

bgnotify_treshold=1
DISABLE_AUTO_UPDATE="false"
export ZSH=${modules_folder}/zsh/oh-my-zsh
sourceIfExists $ZSH/oh-my-zsh.sh

# oh-my zsh activates a shared history among the instances and I don't like that
unset SHARE_HISTORY
setopt histignorespace

# Print a status, but except the scp connections, otherwise scp transfers will fail
if [ "$TERM" != "dumb" ] && [ -f ${modules_folder}/print_status ]
then
    . ${modules_folder}/print_status
fi

# The following lines were added by compinstall

#zstyle ':completion:*' completer _complete _ignored
#zstyle :compinstall filename '/home/camza/.zshrc'
#
autoload -Uz compinit
compinit -u
## End of lines added by compinstall
## Lines configured by zsh-newuser-install
#HISTFILE=~/.zsh-histfile
#HISTSIZE=99999
#SAVEHIST=99999
#setopt appendhistory
#unsetopt beep
#bindkey -e
# End of lines configured by zsh-newuser-install

# Cusotomize zsh-syntax-highlighting (get ride of the dark blue color, to turn it off, set it to none)
ZSH_HIGHLIGHT_STYLES[globbing]='fg=cyan,bold'

[ $is_cygwin -eq 0 ] && sourceIfExists ~/.fzf.zsh

# vim:syn=sh

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm


#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="/home/neurosys/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# To reload configuration 
# tmux source -F <config-file>

# To launch a new tmux server (independent from one already running)
# tmux -L <port-number>

## TODO what is this??? is it some form of hidden panel?
#   alternate-screen [on | off]
#            This option configures whether programs running inside the pane may use the terminal alternate screen feature, which allows the smcup and rmcup terminfo(5) capabilities.  The alternate screen feature preserves the
#            contents of the window when an interactive application starts and restores it on exit, so that any output visible before the application starts reappears unchanged after it exits.
#
## TODO detach pane into a separate window
#   join-pane [-bdfhv] [-l size] [-s src-pane] [-t dst-pane]
#                  (alias: joinp)
#            Like split-window, but instead of splitting dst-pane and creating a new pane, split it and move src-pane into the space.  This can be used to reverse break-pane.  The -b option causes src-pane to be joined to left
#            of or above dst-pane.
#
#            If -s is omitted and a marked pane is present (see select-pane -m), the marked pane is used rather than the current pane.
#
# C-a - delete the most recent copied buffer
# C-a = choose which buffer to paste interractively from a list
#
# <C-a> <Shift+1> extracts the current pane and puts it as last window
# <C-a> ; switches to the last pane
#

# Free keys:
# <C-a> e
# <C-a> r
# <C-a> ' (almost free, I don't use the feature that's configured there)
# <C_a> i (shows info about the window, I don't use the feature)


# Set prefix to C-a like screeen
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# defatult shell
set -g default-shell /usr/bin/zsh

# Activate colors
set -g default-terminal "screen-256color"

# rename window to reflect current program
setw -g automatic-rename on

# renumber windows when a window is closed
set -g renumber-windows on

# use vi key bindings
setw -g mode-keys vi
setw -g status-keys vi

# time in milliseconds for which tmux waits after an escape is input to
# determine if it is part of a function or meta key sequences
set -s escape-time 0

# repeat-time allows for multiple commands to be sent without pressing the prefix again
# decrease repeat timeout
set -sg repeat-time 100

# start windows numbering at 1
set -g base-index 1         
# make pane numbering consistent with windows
setw -g pane-base-index 1


# allow changing the name of the terminal title
set -g set-titles on                        # set terminal title

# title format
# h means host
set -g set-titles-string '#S ● #I #W'

# ???
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# redraw status line every 10 seconds
set -g status-interval 10

# 24 hour clock
setw -g clock-mode-style 24

# show if a window has activity
set -g monitor-activity on

# If on display a message instead of sending a bell when a window has activity
set -g visual-activity off

# Swap the current window with the one to the left
bind-key Left swap-window -d -t -1

# Swap the current window with the one to the right
bind-key Right swap-window -d -t +1

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# list paster buffers
bind b list-buffers

# set the status line's colors
#set -g status-style fg=white,bg=blue

#set -g window-status-separator ''
#    

#set -g window-status-current-style bg=cyan,fg=red
#set -g window-status-current-format

#=================================================================================================
#============================  S T Y L E =========================================================
#=================================================================================================

# active tab bg=colour39 # light blue
# active tab fg=black
# left status bg=colour226
# 
# normal: bg=black
# current tab: fg=black,bg=light blue
# 

## Set status line style for windows with an activity alert.  For how to specify style, see the STYLES section.
set -g window-status-activity-style fg=red,bg=black
#
## Set status line style for windows with a bell alert.  For how to specify style, see the STYLES section.
set -g window-status-bell-style fg=red,bg=black
#
## Like window-status-format, but is the format used when the window is the current window.
set -g window-status-current-format '#[fg=black,bg=colour39,bold] #I  #W #[fg=colour39,bg=black]#[default]'
#
## Set status line style for the currently active window.  For how to specify style, see the STYLES section.
set -g window-status-current-style bg=blue,fg=white
 
## Set status line style for a single window.  For how to specify style, see the STYLES section.
set -g window-status-style bg=black,fg=colour39

## Set the format in which the window is displayed in the status line window list.  See the FORMATS and STYLES sections.
#set -g window-status-format ' #W #[fg=blue,bg=black]#[default]'
#set -g window-status-format ' #W #[fg=blue,bg=black]#P #[default]'
set -g window-status-format ' #I #W '
#
## Set status line style for the last active window.  For how to specify style, see the STYLES section.
set -g window-status-last-style fg=colour226,bg=black
#
## Sets the separator drawn between windows in the status line.  The default is a single space character.
#set -g window-status-separator '#[fg=black,bg=colour51]#[default]'
#
#
## Set the pane style when it is the active pane.  For how to specify style, see the STYLES section.
#set -g window-active-style 
#
## Set the pane style.  For how to specify style, see the STYLES section.
#set -g window-style bg=black

set -g status-style bg=black
set -g status-left-length 32
set -g status-left '#[fg=black,bg=colour226] #S #[fg=colour226,bg=black]#[default]'
#set -g status-right '#[fg=red]CPU: #(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=yellow]#(free -m | grep Mem | awk "{ print \\\"Used Mem:\\\" \\\$3\\\"/\\\"\\\$2 }")#[default] #[fg=green]%Y-%m-%d#[default] #[fg=white]%H:%M:%S#[default]'

set -g status-right-length 64
set -g status-right '#[fg=,bg=black]#(date "+%H:%M")  #(date "+%Y-%m-%d") #[fg=red,bg=black]#[fg=white,bg=red] #(whoami) #[fg=white,bg=red]#[fg=black,bg=white,bold]#h #[default]'

# ???
#set -g display-panes-active-colour colour51
#set -g display-panes-colour colour39

# Set the border for active and inactive panes
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour39

#bind C-| display-popup -E 
#bind -n C-M display-popup -E -w 80% "tmux new-session -A -s scratch"

bind  C-t display-popup -E -w 80% -h 80% "tui"
bind C-g display-popup -d "#{pane_current_path}" -E -w 80% -h 80% "tig"
#bind -n C-m display-popup -E -w 80% -h 80% "task calendar"
bind  C-w display-popup -d "#{pane_current_path}" -E -w 80% -h 80% "nvim"
bind  C-o display-popup -d "#{pane_current_path}" -E -w 80% -h 80% "mc -S gotar"
#bind -n C-y display-popup -E -w 80% -h 80% "ranger"
bind  C-r display-popup -d "#{pane_current_path}" -E -w 80% -h 80% "ranger"

# Rebind creation of the windows and panes to launch in the current path of the selected window / pane
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Start recording the content of the pane to a file
# -I record stdin
# -O record stdout
# -o open a pipe oly if it is not already opened
#bind  C-e pipe-pane -o 'cat >>~/output.#I-#P'
